#!/usr/bin/env node

const args = require('minimist')(process.argv.slice(2));
const fetch = require('node-fetch');
const fs = require('fs');
const git = require('simple-git')();
const package = require('./package.json');

const branches = ['main', 'master', 'develop'];

// TODO: make sure branch is develop or master (configurable)
// TODO: make sure branch is clean
// TODO: determine what changed since last tag
// TODO: update version
// TODO: push changes, including tags, with version number as message
// TODO: create github release
// TODO: upload release artifact (if any)

function usage(message) {
  console.log('');
  console.log(`${package.name} v${package.version}`);
  console.log('');
  if (message) {
    console.log(`  ${message}`);
    console.log('');
  }
  console.log('usage: unchain');
  console.log('');
  process.exit(1);
}

(async () => {

  await git.init();

  const branch = await git.branch();
  if (!branches.includes(branch.current)) { usage(`must be on one of these branches: ${branches.join(', ')}`) }

  const stuff = await git.fetch();

  const status = await git.status();
  if (status.ahead || status.behind || status.staged.length || status.files.length) { usage(`branch is not clean`) }

  const tags = await git.tags();
  if (!tags.latest) { usage(`could not determine latest tag`) }

  const logs = await git.log({from: tags.latest, to: 'HEAD'});
  console.log(logs.all.map(it => it.message));

})();

